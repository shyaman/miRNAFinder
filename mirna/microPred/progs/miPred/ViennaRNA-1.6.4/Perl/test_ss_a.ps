%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-1.6.4
%%CreationDate: Wed May 16 15:32:10 2007
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint coor length cutpoint sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
     coor exch 1 sub get aload pop moveto
     coor exch 1 sub get aload pop lineto
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
   exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
   % write text at base i plus offset dx, dy
   4 3 roll 1 sub coor exch get aload pop moveto
   3 1 roll fsize mul exch fsize mul exch rmoveto
   show
} bind def
/cmark { % i cmark   draw circle around base i
   newpath 1 sub coor exch get aload pop
   fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c cmark
   % draw basepair i,j with c counter examples in gray
   gsave
   3 min [0 0.33 0.66 0.9] exch get setgray
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   1 sub dup coor exch get aload pop moveto
   sequence exch 1 getinterval cshow
   grestore
} bind def
/segmark { % f i j lw r g b segmark
   % mark segment [i,j] with outline width lw and color rgb
   % use omark and Fomark instead
   gsave
    setrgbcolor setlinewidth
    newpath
    1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch {
	    coor exch get aload pop lineto
    } for
    { closepath fill } if  stroke
   grestore
} bind def
/omark { % i j lw r g b omark
   % stroke segment [i..j] with linewidth lw, color rgb
   false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
   % fill segment [i..j] with color rgb
   % should precede drawbases
   1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
   % fill block between pairs (i,j) and (k,l) with color rgb
   % should precede drawbases
   gsave
    setrgbcolor
    newpath
    exch 4 3 roll exch 1 sub exch 1 sub dup
    coor exch get aload pop moveto
    exch 1 exch { coor exch get aload pop lineto } for
    exch 1 sub exch 1 sub dup
    coor exch get aload pop lineto
    exch 1 exch { coor exch get aload pop lineto } for
    closepath fill stroke
   grestore
} bind def
/hsb {
    dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
   % draw basepair i,j in color
   % 1 index 0.00 ne {
   gsave
   newpath
   hsb
   fsize setlinewidth
   1 sub coor exch get aload pop moveto
   1 sub coor exch get aload pop lineto
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGCAGGGAUACCCGCG\
) def
/coor [
[92.500 142.204]
[92.500 127.203]
[92.500 112.203]
[85.676 100.000]
[92.500 87.797]
[92.500 72.797]
[83.836 58.873]
[91.800 44.537]
[108.200 44.537]
[116.164 58.873]
[107.500 72.797]
[107.500 87.797]
[114.324 100.000]
[107.500 112.203]
[107.500 127.203]
[107.500 142.204]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[5 12]
[6 11]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 15 1 gmark
3 cmark

% End Annotations
% show it
showpage
end
%%EOF
